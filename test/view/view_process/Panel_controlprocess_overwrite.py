"""Subclass of Panel_controlprocess, which is generated by wxFormBuilder."""

import wx
import sys
import GUI_controlprocess

from control.control_process import control_process
from control.control_process import control_process_showdata
from control.tools import view_tools

# Implementing Panel_controlprocess
class panel_process( GUI_controlprocess.Panel_controlprocess ):
	def __init__( self, parent, id, pos, size, style ):

		self.parent = parent
		self.showdatacontrol = control_process_showdata.ShowDataControl(self)
		self.control = control_process.Control(self)
		self.change_status = False
		self.current_func_str = ''
		self.current_choosen = None
		GUI_controlprocess.Panel_controlprocess.__init__(self, parent)
		view_tools.config_control(self, id, pos, size, style)
		self.control.set_tree(self.m_treeControl_showdata)
		self.m_treeControl_showdata.Bind(wx.EVT_TREE_SEL_CHANGED, self.refresh_current_selection)
		# self.m_treeControl_showdata.Bind(wx.EVT_KILL_FOCUS, self.unselect_items)
	# Handlers for Panel_controlprocess events.
	# def check_save_status( self, event ):
	# 	self.control.monitor_changes(event, self.change_status)


	def add_functions( self, event ):
		# TODO: Implement add_functions
		self.change_status = True
		self.control.append_item()

	def delete_functions( self, event ):
		# TODO: Implement delete_functions
		self.change_status = True
		self.control.delete_item()


	def take_function_up( self, event ):
		# TODO: Implement take_function_up
		self.change_status = True
		self.control.change_item_position('up')

	def take_function_down( self, event ):
		# TODO: Implement take_function_down
		self.change_status = True
		self.control.change_item_position('down')

	def save_change( self, event ):
		# TODO: Implement save_change
		self.change_status = False

		ret, ret_msg = self.control.save_to_disk(self.control.file_path)
		wx.MessageBox(ret_msg)
		print 'the path of filepath_rewrite is %s' % self.control.file_path_rewrite
		if self.control.file_path_rewrite:
			ret_file_rewrite, ret_msg_file_rewrite = self.control.save_to_disk(self.control.file_path_rewrite)
			print 'The result of saving to disk for lua Programming is %s' % ret_msg_file_rewrite
		else:
			pass


	# def redo_edit( self, event ):
	# 	# TODO: Implement redo_edit
	# 	self.change_status = True
	# 	self.control.load_from_disk()

	def refresh_current_selection( self, event ):
		print 'refresh_current_selection ...'

		self.control.refresh_current_selection()

	def modify_runtime( self, event ):
		self.change_status = True
		self.control.modify_runtime()

	def import_prj_fromdisk( self, event ):
		self.change_status = True
		self.control.import_prj_fromdisk()

	def output_to_folder( self, event ):
		self.change_status = False
		self.control.output_to_folder()

	def show_process_control_help( self, event ):

		wx.MessageBox(str(self.control.load_help_msg()))